{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack:///./special-keys.js","webpack:///./english-symbols.js","webpack:///./russian-symbols.js","webpack:///./set-keyboard.js","webpack:///./app.js","webpack:///./text-area.js"],"sourcesContent":["export const specialKeyEvent = ['ShiftLeft', 'ShiftRight', 'ControlLeft', 'ControlRight', 'AltLeft', 'AltRight',\r\n                                'ArrowUp', 'ArrowLeft', 'ArrowDown', 'ArrowRight'];\r\n\r\nexport const specialKey = ['Shift', 'Shift', 'Ctrl', 'Ctrl', 'Alt', 'Alt', '&uarr;', '&larr;', '&darr;', '&rarr;'];","import { specialKey, specialKeyEvent } from \"./special-keys\";\r\n\r\nexport const engSymbolsFirstRow = [['`','~'], ['!','1'], ['@','2'], ['#','3'], ['$','4'], ['%','5'], ['^','6'],\r\n                    ['&','7'], ['*','8'], ['(','9'], [')','0'], ['_','-'], ['+','='], 'Backspace'];\r\n\r\nexport const engSymbolsSecondRow = ['Tab', 'Q', 'W', 'E', 'R', 'T', 'Y', 'U', 'I', 'O', 'P', '[', ']', ['|', \r\n'\\\\'], 'Delete'];\r\n\r\nexport const engSymbolsThirdRow = ['CapsLock', 'A', 'S', 'D', 'F', 'G', 'H', 'J', 'K', 'L', ';', '\\'', 'Enter'];\r\n\r\nexport const engSymbolsForthRow = ['Shift', 'Z', 'X', 'C', 'V', 'B', 'N', 'M', ',', '.', '/', '&uarr;', 'Shift'];\r\n\r\nexport const engSymbolsFifthRow = ['Ctrl', 'Alt', ' ', 'Alt', 'Ctrl', '&larr;', '&darr;', '&rarr;'];\r\n\r\nexport const engKeyBoard = [engSymbolsFirstRow, engSymbolsSecondRow, engSymbolsThirdRow, \r\n                            engSymbolsForthRow, engSymbolsFifthRow];\r\n\r\nexport function createRow (arr) {\r\n    let shifts = true, ctrls = true, alts = true;\r\n    let row = document.createElement('div');\r\n    row.className = 'keyboard-row';\r\n    let specialKeyArr = specialKey;\r\n    for (let symbol of arr) {\r\n        let button = document.createElement('button');\r\n        if (Array.isArray(symbol)) {\r\n            button.innerHTML = \"<text class='sup'>\" + symbol[0] + \"</text>\" + symbol[1];\r\n        } else {\r\n            button.innerHTML = symbol;\r\n        }\r\n        if (specialKeyArr.includes(symbol)) {\r\n            let index = specialKeyArr.indexOf(symbol);\r\n            if (symbol === 'Shift' || symbol ==='Ctrl' || symbol === 'Alt') {\r\n                if (symbol === 'Shift') {\r\n                    if(shifts) {\r\n                        shifts = false;\r\n                    } else {\r\n                        index = specialKeyArr.lastIndexOf(symbol);\r\n                    }\r\n                } else if (symbol ==='Ctrl') {\r\n                    if(ctrls) {\r\n                        ctrls = false;\r\n                    } else {\r\n                        index = specialKeyArr.lastIndexOf(symbol);\r\n                    }\r\n                } else if (symbol === 'Alt') {\r\n                    if(alts) {\r\n                        alts = false;\r\n                    } else {\r\n                        index = specialKeyArr.lastIndexOf(symbol);\r\n                    }\r\n                }\r\n            }\r\n            document.addEventListener(\"keydown\", function (event) {\r\n                if (event.code === specialKeyEvent[index]) {\r\n                    button.className = 'pressed';\r\n                }\r\n            });\r\n            document.addEventListener(\"keyup\", function (event) {\r\n                if (event.code === specialKeyEvent[index]) {\r\n                    button.className = '';\r\n                }\r\n            });\r\n        } else {\r\n            document.addEventListener(\"keydown\", function (event) {\r\n                if(event.key === symbol || event.key.toUpperCase() === symbol || \r\n                  (Array.isArray(symbol) && (event.key === symbol[0] || event.key === symbol[1]))) {\r\n                      button.className = 'pressed';\r\n                }\r\n            });\r\n            document.addEventListener(\"keyup\", function (event) {\r\n                if(event.key === symbol || event.key.toUpperCase() === symbol || \r\n                  (Array.isArray(symbol) && (event.key === symbol[0] || event.key === symbol[1]))) {\r\n                      button.className = '';\r\n                }\r\n            });\r\n        }\r\n        row.append(button);\r\n    }\r\n    return row;\r\n}","export const rusSymbolsFirstRow = ['Ё', ['!','1'], ['@','2'], ['#','3'], ['$','4'], ['%','5'], ['^','6'],\r\n                    ['&','7'], ['*','8'], ['(','9'], [')','0'], ['_','-'], ['+','='], 'Backspace'];\r\n\r\nexport const rusSymbolsSecondRow = ['Tab', 'Й', 'Ц', 'У', 'К', 'Е', 'Н', 'Г', 'Ш', 'Щ', 'З', 'Х', 'Ъ', ['/', \r\n                                '\\\\'], 'Delete'];\r\n\r\nexport const rusSymbolsThirdRow = ['CapsLock', 'Ф', 'Ы', 'В', 'А', 'П', 'Р', 'О', 'Л', 'Д', 'Ж', 'Э', 'Enter'];\r\n\r\nexport const rusSymbolsForthRow = ['Shift', 'Я', 'Ч', 'С', 'М', 'И', 'Т', 'Ь', 'Б', 'Ю', [',', '.'], '&uarr;', 'Shift'];\r\n\r\nexport const rusSymbolsFifthRow = ['Ctrl', 'Alt', ' ', 'Alt', 'Ctrl', '&larr;', '&darr;', '&rarr;'];\r\n\r\nexport const rusKeyBoard = [rusSymbolsFirstRow, rusSymbolsSecondRow, rusSymbolsThirdRow,\r\n                            rusSymbolsForthRow, rusSymbolsFifthRow];","import { engKeyBoard, createRow } from './english-symbols';\r\nimport { rusKeyBoard } from './russian-symbols';\r\n\r\n\r\nexport function setKeyboard(boardArea, lang){\r\n    boardArea.innerHTML = '';\r\n    if (lang === 'rus') {\r\n        for (let row of rusKeyBoard) {\r\n            boardArea.append(createRow(row));\r\n        }\r\n    } else {\r\n        for (let row of engKeyBoard) {\r\n            boardArea.append(createRow(row));\r\n        }\r\n    }\r\n}","import {createTextArea, createKeyBoard, createNote} from './text-area';\r\nimport { setKeyboard } from './set-keyboard';\r\n\r\nlet lang = 'eng';\r\n\r\ndocument.body.append(createNote());\r\ndocument.body.append(createTextArea());\r\nlet kbContainer = createKeyBoard();\r\ndocument.body.append(kbContainer);\r\n\r\nsetKeyboard(kbContainer, lang);\r\n\r\nlet pressed = new Set();\r\nlet change = false;\r\nwindow.addEventListener(\"keydown\", function (event) {\r\n    pressed.add(event.key);\r\n    if (pressed.has('Shift') && pressed.has('Alt')) {\r\n        if (lang === 'eng') {\r\n            lang = 'rus';\r\n        } else {\r\n            lang = 'eng';\r\n        }\r\n        change = true;\r\n    }\r\n});\r\n\r\nwindow.addEventListener(\"keyup\", function (event) {\r\n    pressed.delete(event.key);\r\n    if(change){\r\n        setKeyboard(kbContainer, lang);\r\n        change = false;\r\n    }\r\n})\r\n","export function createTextArea(){\r\n    let textArea = document.createElement('textarea');\r\n    textArea.className = 'text-area';\r\n    textArea.ariaSelected;\r\n    return textArea;\r\n}\r\n\r\nexport function createKeyBoard() {\r\n    let keyBoard = document.createElement('div');\r\n    keyBoard.className = 'keyboard-container';\r\n    return keyBoard;\r\n}\r\n\r\nexport function createNote() {\r\n    let note = document.createElement('div');\r\n    note.className = 'note';\r\n    note.innerHTML = 'Change lang: Shift + Alt';\r\n    return note;\r\n}"],"names":["specialKeyEvent","specialKey","engKeyBoard","createRow","arr","shifts","ctrls","alts","row","document","createElement","className","specialKeyArr","symbol","button","Array","isArray","innerHTML","includes","index","indexOf","lastIndexOf","addEventListener","event","code","key","toUpperCase","append","rusKeyBoard","setKeyboard","boardArea","lang","body","note","createNote","textArea","ariaSelected","createTextArea","kbContainer","keyBoard","createKeyBoard","pressed","Set","change","window","add","has","delete"],"sourceRoot":""}